// api/bot.js
import bot from "../bot"; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞

export default async (req, res) => {
  try {
    if (req.method === "POST") {
      let body = "";

      req.on("data", (chunk) => {
        body += chunk.toString(); // –î–æ–¥–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–∏–π –∫—É—Å–æ–∫ –¥–∞–Ω–∏—Ö
      });

      req.on("end", () => {
        if (body) {
          const update = JSON.parse(body);
          console.log("üì© –û—Ç—Ä–∏–º–∞–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:", update.message);

          if (update.message) {
            bot.processUpdate(update); // –û–±—Ä–æ–±–ª—è—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
          }
        }

        res.status(200).send("‚úÖ –ë–æ—Ç –æ—Ç—Ä–∏–º–∞–≤ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è!"); // –í—ñ–¥–ø–æ–≤—ñ–¥—å –ø—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏
      });
    } else if (req.method === "GET") {
      // –Ø–∫—â–æ GET –∑–∞–ø–∏—Ç
      res.status(200).send("üëã –ü—Ä–∏–≤—ñ—Ç! –¶–µ —Å–µ—Ä–≤–µ—Ä —Ç–≤–æ–≥–æ Telegram –±–æ—Ç–∞ üöÄ"); // –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ GET –∑–∞–ø–∏—Ç
    } else {
      res.status(405).send("‚ùå –ú–µ—Ç–æ–¥ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–∏–π"); // –Ø–∫—â–æ —ñ–Ω—à–∏–π –º–µ—Ç–æ–¥
    }
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", error);
    res.status(500).send("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫..."); // –í—ñ–¥–ø–æ–≤—ñ–¥—å —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
  }
};
